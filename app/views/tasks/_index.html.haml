- stalled = false unless defined? stalled
.block
  .head
    .l
      .c
        %h2
          = title
          - if tasks.respond_to?(:total_entries) || tasks.size.class.to_s == 'Integer'
            = "#{_('total')} (#{tasks.respond_to?(:total_entries) ? tasks.total_entries : tasks.size}"
            = ")"
  .container
    .t
      %span.l
        %span.c
    .m
      .l
        .holder
          /
            data-table
          - if tasks.blank?
            = _("No Tasks found")
          - else
            %table.data-table
              %tbody
                %tr
                  %th.first.style4
                    %a.up{ :href => dashboard_path(:order_by => {:property => "name", :dir => order_direction(params[:order_by].try(:[], :dir))}) }
                      = _("Name")
                  - if editing
                    %th.style12
                      = _("Assignee")
                  %th.style12
                    %a.up{ :href => dashboard_path(:order_by => {:includes => "kind", :property => "task_kinds.name", :dir => order_direction(params[:order_by].try(:[], :dir))}) }
                      = _("Kind")
                  %th.style7
                    - if defined? stalled and stalled
                      %a.up{ :href=> dashboard_path(:order_by_updated_at => {:dir => order_direction(params[:order_by_updated_at].try(:[], :dir))})}
                        = _("Last Updated")
                    - else
                      %a.up{ :href => dashboard_path(:order_by_state => {:dir => order_direction(params[:order_by_state].try(:[], :dir))}) }
                        = _("State")
                  %th.style12
                    %a.up{ :href => dashboard_path(:order_by => {:property => "documents_count", :dir => order_direction(params[:order_by].try(:[], :dir))}) }
                      = _("Files")
                  %th.style7
                    %a.up{ :href => dashboard_path(:sort_by => "percent_done", :dir => order_direction(params[:order_by].try(:[], :dir)), :order_by => { :dir =>order_direction(params[:order_by].try(:[], :dir)), :property => 'documents_count' })}
                      = _("Progress")
                  %th.first.style11
                    \&nbsp;
                != render(:partial => tasks, :locals => {:editing => editing, :stalled => stalled})
    .b
      %span.l
        %span.c
- if tasks.respond_to?(:total_entries)
  - pname = defined?(param_name) ? param_name : :page
  != will_paginate(tasks, param_name: pname)
